<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="16" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-16T19:28:09 IST" name="Default suite" finished-at="2024-05-16T19:29:15 IST" duration-ms="65790">
    <groups>
    </groups>
    <test started-at="2024-05-16T19:28:09 IST" name="Default test" finished-at="2024-05-16T19:29:15 IST" duration-ms="65790">
      <class name="tests.Test_FlipkartSite">
        <test-method is-config="true" signature="initializeDriver(java.lang.String)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:09 IST" name="initializeDriver" finished-at="2024-05-16T19:28:12 IST" duration-ms="2649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method signature="getFlipkartSite()[pri:1, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:12 IST" name="getFlipkartSite" description="This test case is for launching Flipkart Site" finished-at="2024-05-16T19:28:14 IST" duration-ms="2151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFlipkartSite -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:14 IST" name="getTestResult" finished-at="2024-05-16T19:28:14 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getFlipkartSite status=SUCCESS method=Test_FlipkartSite.getFlipkartSite()[pri:1, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="clickOnProduct()[pri:3, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:14 IST" name="clickOnProduct" description="This test case is for clicking a product on Homepage" finished-at="2024-05-16T19:28:14 IST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnProduct -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:14 IST" name="getTestResult" finished-at="2024-05-16T19:28:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnProduct status=SUCCESS method=Test_FlipkartSite.clickOnProduct()[pri:3, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="searchProduct()[pri:4, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:14 IST" name="searchProduct" description="This test case is for searching a product on search-box" finished-at="2024-05-16T19:28:18 IST" duration-ms="3592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProduct -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:18 IST" name="getTestResult" finished-at="2024-05-16T19:28:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchProduct status=SUCCESS method=Test_FlipkartSite.searchProduct()[pri:4, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="changingPinCode()[pri:5, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:18 IST" name="changingPinCode" description="This test case is for changing the pincode" finished-at="2024-05-16T19:28:20 IST" duration-ms="2553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changingPinCode -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:20 IST" name="getTestResult" finished-at="2024-05-16T19:28:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=changingPinCode status=SUCCESS method=Test_FlipkartSite.changingPinCode()[pri:5, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkroductImages()[pri:6, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:20 IST" name="checkroductImages" description="This test case is for checking product images" finished-at="2024-05-16T19:28:25 IST" duration-ms="4095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkroductImages -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:25 IST" name="getTestResult" finished-at="2024-05-16T19:28:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkroductImages status=SUCCESS method=Test_FlipkartSite.checkroductImages()[pri:6, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="addToCart()[pri:7, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:25 IST" name="addToCart" description="This test case is to Add Product to cart" finished-at="2024-05-16T19:28:25 IST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToCart -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:25 IST" name="getTestResult" finished-at="2024-05-16T19:28:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addToCart status=SUCCESS method=Test_FlipkartSite.addToCart()[pri:7, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="placeOrder()[pri:8, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:25 IST" name="placeOrder" description="This test case is to Add Product to cart" finished-at="2024-05-16T19:28:28 IST" duration-ms="3324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:28 IST" name="getTestResult" finished-at="2024-05-16T19:28:28 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrder status=SUCCESS method=Test_FlipkartSite.placeOrder()[pri:8, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="sortProduct()[pri:9, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:28 IST" name="sortProduct" description="This test case is to sort product based on price" finished-at="2024-05-16T19:28:31 IST" duration-ms="3350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortProduct -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:31 IST" name="getTestResult" finished-at="2024-05-16T19:28:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sortProduct status=SUCCESS method=Test_FlipkartSite.sortProduct()[pri:9, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="applyPriceFilter()[pri:10, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:31 IST" name="applyPriceFilter" description="This test case is to apply price filter" finished-at="2024-05-16T19:28:32 IST" duration-ms="898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyPriceFilter -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:32 IST" name="getTestResult" finished-at="2024-05-16T19:28:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyPriceFilter status=SUCCESS method=Test_FlipkartSite.applyPriceFilter()[pri:10, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="applyBrandFilter()[pri:11, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:32 IST" name="applyBrandFilter" description="This test case is to apply brand filter" finished-at="2024-05-16T19:28:34 IST" duration-ms="1640" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="XqNaEv"></div> is not clickable at point (31, 7). Other element would receive the click: <div class="LOe-Xr"></div>
  (Session info: chrome=124.0.6367.207)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca6447c1156426513e2a0ff0bad61b9b, clickElement {id=f.3696DD5F6A3762A9DDE4DFDB747E5F3A.d.690B0CC990A8FDD59CF02DF58C31BC65.e.842}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.207, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\VARUNB~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51197}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51197/devtoo..., se:cdpVersion: 124.0.6367.207, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ca6447c1156426513e2a0ff0bad61b9b)] -> xpath: //div[text()='SAMSUNG']/preceding-sibling::div]
Session ID: ca6447c1156426513e2a0ff0bad61b9b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="XqNaEv"></div> is not clickable at point (31, 7). Other element would receive the click: <div class="LOe-Xr"></div>
  (Session info: chrome=124.0.6367.207)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca6447c1156426513e2a0ff0bad61b9b, clickElement {id=f.3696DD5F6A3762A9DDE4DFDB747E5F3A.d.690B0CC990A8FDD59CF02DF58C31BC65.e.842}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.207, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\VARUNB~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51197}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51197/devtoo..., se:cdpVersion: 124.0.6367.207, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ca6447c1156426513e2a0ff0bad61b9b)] -> xpath: //div[text()='SAMSUNG']/preceding-sibling::div]
Session ID: ca6447c1156426513e2a0ff0bad61b9b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy30.click(Unknown Source)
at pages.FlipkartBrandFilters.brandFilter(FlipkartBrandFilters.java:34)
at tests.Test_FlipkartSite.applyBrandFilter(Test_FlipkartSite.java:266)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyBrandFilter -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:34 IST" name="getTestResult" finished-at="2024-05-16T19:28:34 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyBrandFilter status=FAILURE method=Test_FlipkartSite.applyBrandFilter()[pri:11, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="applyRatingFilter()[pri:12, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:34 IST" name="applyRatingFilter" description="This test case is to apply rating filter" finished-at="2024-05-16T19:28:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyRatingFilter -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:34 IST" name="getTestResult" finished-at="2024-05-16T19:28:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyRatingFilter status=SUCCESS method=Test_FlipkartSite.applyRatingFilter()[pri:12, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="applyBatteryCapacityFilter()[pri:13, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:34 IST" name="applyBatteryCapacityFilter" description="This test case is to apply Battery Capacity filter" finished-at="2024-05-16T19:28:36 IST" duration-ms="1329" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="FtQCb2 _3Owiq+">...</div> is not clickable at point (143, 25). Other element would receive the click: <div class="ngOQ7L">...</div>
  (Session info: chrome=124.0.6367.207)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca6447c1156426513e2a0ff0bad61b9b, clickElement {id=f.3696DD5F6A3762A9DDE4DFDB747E5F3A.d.690B0CC990A8FDD59CF02DF58C31BC65.e.914}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.207, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\VARUNB~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51197}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51197/devtoo..., se:cdpVersion: 124.0.6367.207, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ca6447c1156426513e2a0ff0bad61b9b)] -> xpath: //div[text()='Battery Capacity']/..]
Session ID: ca6447c1156426513e2a0ff0bad61b9b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="FtQCb2 _3Owiq+">...</div> is not clickable at point (143, 25). Other element would receive the click: <div class="ngOQ7L">...</div>
  (Session info: chrome=124.0.6367.207)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca6447c1156426513e2a0ff0bad61b9b, clickElement {id=f.3696DD5F6A3762A9DDE4DFDB747E5F3A.d.690B0CC990A8FDD59CF02DF58C31BC65.e.914}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.207, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\VARUNB~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51197}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51197/devtoo..., se:cdpVersion: 124.0.6367.207, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ca6447c1156426513e2a0ff0bad61b9b)] -> xpath: //div[text()='Battery Capacity']/..]
Session ID: ca6447c1156426513e2a0ff0bad61b9b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy30.click(Unknown Source)
at pages.FlipkartBatteryFilter.selectBatteryCapacity(FlipkartBatteryFilter.java:38)
at tests.Test_FlipkartSite.applyBatteryCapacityFilter(Test_FlipkartSite.java:291)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyBatteryCapacityFilter -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:36 IST" name="getTestResult" finished-at="2024-05-16T19:28:36 IST" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyBatteryCapacityFilter status=FAILURE method=Test_FlipkartSite.applyBatteryCapacityFilter()[pri:13, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkMenApparel()[pri:14, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:36 IST" name="checkMenApparel" description="This test case is to check Men jackets products" finished-at="2024-05-16T19:28:39 IST" duration-ms="2559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMenApparel -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:39 IST" name="getTestResult" finished-at="2024-05-16T19:28:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMenApparel status=SUCCESS method=Test_FlipkartSite.checkMenApparel()[pri:14, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkFurniture()[pri:15, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:39 IST" name="checkFurniture" description="This test case is to check furniture products" finished-at="2024-05-16T19:28:41 IST" duration-ms="2456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkFurniture -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:41 IST" name="getTestResult" finished-at="2024-05-16T19:28:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFurniture status=SUCCESS method=Test_FlipkartSite.checkFurniture()[pri:15, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkOfferZone()[pri:16, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:41 IST" name="checkOfferZone" description="This testThis test case is to check Offer-Zone Section case is to check Offer-Zone Section" finished-at="2024-05-16T19:28:44 IST" duration-ms="2798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOfferZone -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:44 IST" name="getTestResult" finished-at="2024-05-16T19:28:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOfferZone status=SUCCESS method=Test_FlipkartSite.checkOfferZone()[pri:16, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkGrocerySection()[pri:17, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:44 IST" name="checkGrocerySection" description="This test case is to check Grocery Store of Flipkart" finished-at="2024-05-16T19:28:48 IST" duration-ms="4323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGrocerySection -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:48 IST" name="getTestResult" finished-at="2024-05-16T19:28:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkGrocerySection status=SUCCESS method=Test_FlipkartSite.checkGrocerySection()[pri:17, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkMyCart()[pri:18, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:48 IST" name="checkMyCart" description="This test case is to check my Cart" finished-at="2024-05-16T19:28:49 IST" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMyCart -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:49 IST" name="getTestResult" finished-at="2024-05-16T19:28:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMyCart status=SUCCESS method=Test_FlipkartSite.checkMyCart()[pri:18, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkFlights()[pri:19, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:49 IST" name="checkFlights" description="This test case is to check Flight Booking Section" finished-at="2024-05-16T19:28:51 IST" duration-ms="2315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkFlights -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:51 IST" name="getTestResult" finished-at="2024-05-16T19:28:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFlights status=SUCCESS method=Test_FlipkartSite.checkFlights()[pri:19, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="registerUser()[pri:20, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:28:51 IST" name="registerUser" description="This test case is for Register functionality" finished-at="2024-05-16T19:29:03 IST" duration-ms="12115" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()="Enter OTP"]"}
  (Session info: chrome=124.0.6367.207)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca6447c1156426513e2a0ff0bad61b9b, findElement {using=xpath, value=//span[text()="Enter OTP"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.207, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\VARUNB~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51197}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51197/devtoo..., se:cdpVersion: 124.0.6367.207, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ca6447c1156426513e2a0ff0bad61b9b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()="Enter OTP"]"}
  (Session info: chrome=124.0.6367.207)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca6447c1156426513e2a0ff0bad61b9b, findElement {using=xpath, value=//span[text()="Enter OTP"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.207, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\VARUNB~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51197}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51197/devtoo..., se:cdpVersion: 124.0.6367.207, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ca6447c1156426513e2a0ff0bad61b9b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy30.sendKeys(Unknown Source)
at pages.FlipkartRegister.enterOTP(FlipkartRegister.java:55)
at tests.Test_FlipkartSite.registerUser(Test_FlipkartSite.java:419)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:29:03 IST" name="getTestResult" finished-at="2024-05-16T19:29:03 IST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerUser status=FAILURE method=Test_FlipkartSite.registerUser()[pri:20, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="checkLogin()[pri:21, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:29:03 IST" name="checkLogin" description="This test case is for Login functionality" finished-at="2024-05-16T19:29:14 IST" duration-ms="10055" status="FAIL">
          <exception class="com.mailosaur.MailosaurException">
            <message>
              <![CDATA[No matching messages found in time. By default, only messages received in the last hour are checked (use receivedAfter to override this).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.mailosaur.MailosaurException: No matching messages found in time. By default, only messages received in the last hour are checked (use receivedAfter to override this).
at com.mailosaur.Messages.search(Messages.java:345)
at com.mailosaur.Messages.get(Messages.java:55)
at pages.FlipkartLoginPage.generateOTP(FlipkartLoginPage.java:84)
at tests.Test_FlipkartSite.checkLogin(Test_FlipkartSite.java:444)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.mailosaur.MailosaurException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogin -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:29:14 IST" name="getTestResult" finished-at="2024-05-16T19:29:14 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLogin status=FAILURE method=Test_FlipkartSite.checkLogin()[pri:21, instance:tests.Test_FlipkartSite@7e8dcdaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:tests.Test_FlipkartSite@7e8dcdaa]" started-at="2024-05-16T19:29:14 IST" name="tearDownTest" finished-at="2024-05-16T19:29:15 IST" duration-ms="1161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- tests.Test_FlipkartSite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
